# Generated by Django 3.0.7 on 2020-08-08 13:27

import apps.calculator.fields
import apps.calculator.validators
import clients.utils
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CalculatorSettings",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("iva", models.FloatField(default=1)),
                ("tax", models.FloatField(default=1)),
                ("equip_rent_t20", models.FloatField(default=1, validators=[apps.calculator.validators.is_positive])),
                (
                    "equip_rent_t20dha",
                    models.FloatField(default=1, validators=[apps.calculator.validators.is_positive]),
                ),
                (
                    "equip_rent_t20dhs",
                    models.FloatField(default=1, validators=[apps.calculator.validators.is_positive]),
                ),
                ("equip_rent_t21", models.FloatField(default=1, validators=[apps.calculator.validators.is_positive])),
                (
                    "equip_rent_t21dha",
                    models.FloatField(default=1, validators=[apps.calculator.validators.is_positive]),
                ),
                (
                    "equip_rent_t21dhs",
                    models.FloatField(default=1, validators=[apps.calculator.validators.is_positive]),
                ),
                ("equip_rent_t30", models.FloatField(default=1, validators=[apps.calculator.validators.is_positive])),
                ("equip_rent_t31", models.FloatField(default=1, validators=[apps.calculator.validators.is_positive])),
            ],
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", apps.calculator.fields.NameField(max_length=50, unique=True)),
                ("logo", models.ImageField(blank=True, null=True, upload_to="")),
                ("priority", models.IntegerField(blank=True, null=True, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name="Offer",
            fields=[
                ("id", models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.UUIDField(unique=True)),
                ("name", apps.calculator.fields.NameField(max_length=255)),
                ("description", models.TextField()),
                (
                    "tarif",
                    models.CharField(
                        choices=[
                            ("2.0A", "2.0A"),
                            ("2.0DHA", "2.0DHA"),
                            ("2.0DHS", "2.0DHS"),
                            ("2.1A", "2.1A"),
                            ("2.1DHA", "2.1DHA"),
                            ("2.1DHS", "2.1DHS"),
                            ("3.0A", "3.0A"),
                            ("3.1A", "3.1A"),
                        ],
                        max_length=10,
                    ),
                ),
                ("power_min", models.FloatField(blank=True, null=True)),
                ("power_max", models.FloatField(blank=True, null=True)),
                ("consumption_min", models.FloatField(blank=True, null=True)),
                ("consumption_max", models.FloatField(blank=True, null=True)),
                ("client_type", models.IntegerField(choices=[(0, "Individual"), (1, "Business")])),
                ("p1", clients.utils.PositiveNullableFloatField(blank=True, null=True)),
                ("p2", clients.utils.PositiveNullableFloatField(blank=True, null=True)),
                ("p3", clients.utils.PositiveNullableFloatField(blank=True, null=True)),
                ("c1", clients.utils.PositiveNullableFloatField(blank=True, null=True)),
                ("c2", clients.utils.PositiveNullableFloatField(blank=True, null=True)),
                ("c3", clients.utils.PositiveNullableFloatField(blank=True, null=True)),
                (
                    "is_price_permanent",
                    models.CharField(choices=[("Fijo", "Fijo"), ("Indexado", "Indexado")], max_length=20),
                ),
                ("company", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to="calculator.Company")),
            ],
        ),
    ]
