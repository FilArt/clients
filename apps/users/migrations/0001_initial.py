# Generated by Django 3.0.7 on 2020-08-08 13:27

import apps.users.models
from django.conf import settings
import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bids', '0001_initial'),
        ('auth', '0011_update_proxy_permissions'),
        ('calculator', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BackendPhone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=9)),
            ],
            options={
                'db_table': 'backend_phone',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(storage=apps.users.models.FreeswitchStorage(location='/freeswitch_recordings'), upload_to='')),
                ('called_at', models.DateTimeField()),
            ],
            options={
                'db_table': 'calls_call',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('source', models.CharField(choices=[('default', 'Default')], default='default', max_length=30)),
                ('role', models.CharField(blank=True, choices=[(None, 'Client'), ('support', 'Support'), ('admin', 'Admin')], max_length=10, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='')),
                ('username', models.CharField(blank=True, max_length=30, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email address')),
                ('phone', apps.users.models.PhoneNumberField(blank=True, max_length=9, null=True, validators=[apps.users.models.phone_number_validator], verbose_name='Phone number')),
                ('company_changed_at', models.DateTimeField(blank=True, null=True, verbose_name='Company changed at')),
                ('dni', models.CharField(blank=True, max_length=255, null=True, verbose_name='DNI')),
                ('cif_dni', models.CharField(blank=True, max_length=255, null=True, verbose_name='CIF/DNI')),
                ('legal_representative', models.CharField(blank=True, max_length=255, null=True, verbose_name='Legal representative')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('last_modified', models.DateTimeField(auto_now=True)),
                ('permissions', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('profile', 'Profile'), ('bids', 'Bids'), ('offers', 'Offers'), ('calculator', 'Calculator')], max_length=30), default=apps.users.models.get_default_user_permissions, help_text='Possible values: profile, bids, offers, calculator', size=None)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dark_theme', models.BooleanField(default=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Punto',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', apps.users.models.MyCharField(blank=True, max_length=100, null=True, verbose_name='Name')),
                ('province', models.CharField(choices=[('A Coruña', 'A Coruña'), ('Álava', 'Álava'), ('Albacete', 'Albacete'), ('Alicante', 'Alicante'), ('Almería', 'Almería'), ('Asturias', 'Asturias'), ('Ávila', 'Ávila'), ('Badajoz', 'Badajoz'), ('Baleares', 'Baleares'), ('Barcelona', 'Barcelona'), ('Burgos', 'Burgos'), ('Cáceres', 'Cáceres'), ('Cádiz', 'Cádiz'), ('Cantabria', 'Cantabria'), ('Castellón', 'Castellón'), ('Ciudad Real', 'Ciudad Real'), ('Córdoba', 'Córdoba'), ('Cuenca', 'Cuenca'), ('Girona', 'Girona'), ('Granada', 'Granada'), ('Guadalajara', 'Guadalajara'), ('Gipuzkoa', 'Gipuzkoa'), ('Huelva', 'Huelva'), ('Huesca', 'Huesca'), ('Jaén', 'Jaén'), ('La Rioja', 'La Rioja'), ('Las Palmas', 'Las Palmas'), ('León', 'León'), ('Lérida', 'Lérida'), ('Lugo', 'Lugo'), ('Madrid', 'Madrid'), ('Málaga', 'Málaga'), ('Murcia', 'Murcia'), ('Navarra', 'Navarra'), ('Ourense', 'Ourense'), ('Palencia', 'Palencia'), ('Pontevedra', 'Pontevedra'), ('Salamanca', 'Salamanca'), ('Segovia', 'Segovia'), ('Sevilla', 'Sevilla'), ('Soria', 'Soria'), ('Tarragona', 'Tarragona'), ('Santa Cruz de Tenerife', 'Santa Cruz de Tenerife'), ('Teruel', 'Teruel'), ('Toledo', 'Toledo'), ('Valencia', 'Valencia'), ('Valladolid', 'Valladolid'), ('Vizcaya', 'Vizcaya'), ('Zamora', 'Zamora'), ('Zaragoza', 'Zaragoza')], max_length=255, verbose_name='Province')),
                ('locality', models.CharField(max_length=255, verbose_name='Locality')),
                ('address', models.CharField(max_length=255, verbose_name='Address')),
                ('postalcode', models.CharField(max_length=5, validators=[django.core.validators.MinLengthValidator(5)], verbose_name='Postalcode')),
                ('iban', models.CharField(max_length=255, verbose_name='IBAN')),
                ('last_time_company_luz_changed', models.DateField(blank=True, null=True, verbose_name='Last time company light changed')),
                ('last_time_company_gas_changed', models.DateField(blank=True, null=True, verbose_name='Last time company gas changed')),
                ('cups_luz', apps.users.models.MyCharField(blank=True, max_length=100, null=True, verbose_name='CUPS')),
                ('cups_gas', apps.users.models.MyCharField(blank=True, max_length=100, null=True, verbose_name='CUPS gas')),
                ('tarif_luz', apps.users.models.MyCharField(blank=True, max_length=100, null=True, verbose_name='Tarif')),
                ('tarif_gas', apps.users.models.MyCharField(blank=True, max_length=100, null=True, verbose_name='Tarif gas')),
                ('p1', models.FloatField(blank=True, help_text='Power 1', null=True)),
                ('p2', models.FloatField(blank=True, null=True)),
                ('p3', models.FloatField(blank=True, null=True)),
                ('c1', models.FloatField(blank=True, null=True)),
                ('c2', models.FloatField(blank=True, null=True)),
                ('c3', models.FloatField(blank=True, null=True)),
                ('consumo_annual_luz', models.FloatField(blank=True, null=True, verbose_name='Annual consumption')),
                ('consumo_annual_gas', models.FloatField(blank=True, null=True, verbose_name='Annual consumption (gas)')),
                ('category', models.CharField(choices=[('physical', 'Physical'), ('autonomous', 'Autonomous'), ('business', 'Business')], max_length=20)),
                ('bid', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='puntos', to='bids.Bid')),
                ('company_gas', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_gas', to='calculator.Company', verbose_name='Company gas')),
                ('company_luz', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='company_luz', to='calculator.Company', verbose_name='Company light')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='puntos', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'puntos',
            },
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attachment_type', models.CharField(choices=[('factura', 'Factura'), ('factura_1', 'Factura reverso'), ('dni1', 'DNI'), ('dni2', 'DNI reverse side'), ('cif1', 'CIF'), ('cif2', 'CIF reverse side'), ('recibo1', 'Recibo de Autónomo')], max_length=10)),
                ('attachment', models.FileField(upload_to='')),
                ('punto', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='users.Punto')),
            ],
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_type', models.CharField(choices=[('mobile', 'Mobile'), ('city', 'City')], max_length=6)),
                ('number', models.CharField(max_length=9, validators=[apps.users.models.phone_number_validator])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='phones', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'phones',
                'unique_together': {('phone_type', 'user')},
            },
        ),
    ]
